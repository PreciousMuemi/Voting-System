{
	"id": "4eb4ad15f59091be0e73c22bbbb021d7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/2_Owner.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;// Using a recent Solidity version, staying current!\n\n//  import \"hardhat\" ; // This is for debugging, usually removed for deployment.\n\n/**\n * @title Owner\n * @dev This contract is all about who's the boss. Sets and lets you change the owner.\n */\ncontract Owner {\n\n    address private owner; // Storing the address of the main person in charge.\n\n    // Event to announce when the boss changes. Good for tracking who's been in charge.\n    event OwnerSet(address indexed oldOwner, address indexed newOwner);\n\n    // Modifier to make sure ONLY the owner can call certain functions.\n    // Like a VIP pass, but for contract functions.\n    modifier isOwner() {\n        // If the person calling isn't the owner, stop everything and throw an error.\n        // 'require' is like a bouncer checking IDs.\n        require(msg.sender == owner, \"Nah, you're not the owner.\");\n        _; // This means \"carry on with the function code if the require passed\".\n    }\n\n    /**\n     * @dev Constructor: Runs only once when the contract is born!\n     * Sets the person who deployed the contract as the first owner.\n     */\n    constructor() {\n        // console.log(\"Owner contract deployed by:\", msg.sender); // This line is mostly for testing/debugging in Hardhat. See notes below!\n        owner = msg.sender; // Setting the deployer as the OG owner.\n        emit OwnerSet(address(0), owner); // Announcing the first owner (from zero address).\n    }\n\n    /**\n     * @dev Change the boss! Only the current owner can transfer ownership.\n     * @param newOwner The address of the new boss.\n     */\n    function changeOwner(address newOwner) public isOwner { // Using the 'isOwner' VIP pass here!\n        // Gotta make sure the new owner address isn't the zero address (like sending it to nowhere).\n        require(newOwner != address(0), \"Can't transfer ownership to the zero address, fam.\");\n        emit OwnerSet(owner, newOwner); // Announce the change!\n        owner = newOwner; // Update who the boss is.\n    }\n\n    /**\n     * @dev Who's the boss right now? Ask this function.\n     * @return address The address of the current owner.\n     */\n    function getOwner() external view returns (address) {\n        return owner; // Just returning the stored owner address. Easy.\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/2_Owner.sol": {
				"Owner": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract is all about who's the boss. Sets and lets you change the owner.",
						"kind": "dev",
						"methods": {
							"changeOwner(address)": {
								"details": "Change the boss! Only the current owner can transfer ownership.",
								"params": {
									"newOwner": "The address of the new boss."
								}
							},
							"constructor": {
								"details": "Constructor: Runs only once when the contract is born! Sets the person who deployed the contract as the first owner."
							},
							"getOwner()": {
								"details": "Who's the boss right now? Ask this function.",
								"returns": {
									"_0": "address The address of the current owner."
								}
							}
						},
						"title": "Owner",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/2_Owner.sol\":302:2319  contract Owner {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/2_Owner.sol\":1163:1487  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/2_Owner.sol\":1336:1346  msg.sender */\n  caller\n    /* \"contracts/2_Owner.sol\":1328:1333  owner */\n  0x00\n  dup1\n    /* \"contracts/2_Owner.sol\":1328:1346  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/2_Owner.sol\":1423:1428  owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/2_Owner.sol\":1402:1429  OwnerSet(address(0), owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/2_Owner.sol\":1419:1420  0 */\n  0x00\n    /* \"contracts/2_Owner.sol\":1402:1429  OwnerSet(address(0), owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/2_Owner.sol\":302:2319  contract Owner {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/2_Owner.sol\":302:2319  contract Owner {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa6f9dae1\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/2_Owner.sol\":2186:2317  function getOwner() external view returns (address) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/2_Owner.sol\":1637:2050  function changeOwner(address newOwner) public isOwner { // Using the 'isOwner' VIP pass here!... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/2_Owner.sol\":2186:2317  function getOwner() external view returns (address) {... */\n    tag_6:\n        /* \"contracts/2_Owner.sol\":2229:2236  address */\n      0x00\n        /* \"contracts/2_Owner.sol\":2255:2260  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/2_Owner.sol\":2248:2260  return owner */\n      swap1\n      pop\n        /* \"contracts/2_Owner.sol\":2186:2317  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/2_Owner.sol\":1637:2050  function changeOwner(address newOwner) public isOwner { // Using the 'isOwner' VIP pass here!... */\n    tag_12:\n        /* \"contracts/2_Owner.sol\":880:885  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/2_Owner.sol\":866:885  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/2_Owner.sol\":866:876  msg.sender */\n      caller\n        /* \"contracts/2_Owner.sol\":866:885  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/2_Owner.sol\":858:916  require(msg.sender == owner, \"Nah, you're not the owner.\") */\n      tag_15\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"contracts/2_Owner.sol\":1869:1870  0 */\n      0x00\n        /* \"contracts/2_Owner.sol\":1849:1871  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/2_Owner.sol\":1849:1857  newOwner */\n      dup2\n        /* \"contracts/2_Owner.sol\":1849:1871  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/2_Owner.sol\":1841:1926  require(newOwner != address(0), \"Can't transfer ownership to the zero address, fam.\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/2_Owner.sol\":1957:1965  newOwner */\n      dup1\n        /* \"contracts/2_Owner.sol\":1941:1966  OwnerSet(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/2_Owner.sol\":1950:1955  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/2_Owner.sol\":1941:1966  OwnerSet(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/2_Owner.sol\":2008:2016  newOwner */\n      dup1\n        /* \"contracts/2_Owner.sol\":2000:2005  owner */\n      0x00\n      dup1\n        /* \"contracts/2_Owner.sol\":2000:2016  owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/2_Owner.sol\":1637:2050  function changeOwner(address newOwner) public isOwner { // Using the 'isOwner' VIP pass here!... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_25\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:414   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:230   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":276:277   */\n      0x00\n        /* \"#utility.yul\":273:274   */\n      dup1\n        /* \"#utility.yul\":266:278   */\n      revert\n        /* \"#utility.yul\":228:230   */\n    tag_28:\n        /* \"#utility.yul\":319:320   */\n      0x00\n        /* \"#utility.yul\":344:397   */\n      tag_29\n        /* \"#utility.yul\":389:396   */\n      dup5\n        /* \"#utility.yul\":380:386   */\n      dup3\n        /* \"#utility.yul\":369:378   */\n      dup6\n        /* \"#utility.yul\":365:387   */\n      add\n        /* \"#utility.yul\":344:397   */\n      tag_23\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":334:397   */\n      swap2\n      pop\n        /* \"#utility.yul\":290:407   */\n      pop\n        /* \"#utility.yul\":218:414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":420:538   */\n    tag_30:\n        /* \"#utility.yul\":507:531   */\n      tag_32\n        /* \"#utility.yul\":525:530   */\n      dup2\n        /* \"#utility.yul\":507:531   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":502:505   */\n      dup3\n        /* \"#utility.yul\":495:532   */\n      mstore\n        /* \"#utility.yul\":485:538   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":544:926   */\n    tag_34:\n      0x00\n        /* \"#utility.yul\":707:774   */\n      tag_36\n        /* \"#utility.yul\":771:773   */\n      0x32\n        /* \"#utility.yul\":766:769   */\n      dup4\n        /* \"#utility.yul\":707:774   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":700:774   */\n      swap2\n      pop\n        /* \"#utility.yul\":804:838   */\n      0x43616e2774207472616e73666572206f776e65727368697020746f2074686520\n        /* \"#utility.yul\":800:801   */\n      0x00\n        /* \"#utility.yul\":795:798   */\n      dup4\n        /* \"#utility.yul\":791:802   */\n      add\n        /* \"#utility.yul\":784:839   */\n      mstore\n        /* \"#utility.yul\":870:890   */\n      0x7a65726f20616464726573732c2066616d2e0000000000000000000000000000\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":860:863   */\n      dup4\n        /* \"#utility.yul\":856:868   */\n      add\n        /* \"#utility.yul\":849:891   */\n      mstore\n        /* \"#utility.yul\":917:919   */\n      0x40\n        /* \"#utility.yul\":912:915   */\n      dup3\n        /* \"#utility.yul\":908:920   */\n      add\n        /* \"#utility.yul\":901:920   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1256   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":1095:1162   */\n      tag_40\n        /* \"#utility.yul\":1159:1161   */\n      0x1a\n        /* \"#utility.yul\":1154:1157   */\n      dup4\n        /* \"#utility.yul\":1095:1162   */\n      tag_37\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1088:1162   */\n      swap2\n      pop\n        /* \"#utility.yul\":1192:1220   */\n      0x4e61682c20796f75277265206e6f7420746865206f776e65722e000000000000\n        /* \"#utility.yul\":1188:1189   */\n      0x00\n        /* \"#utility.yul\":1183:1186   */\n      dup4\n        /* \"#utility.yul\":1179:1190   */\n      add\n        /* \"#utility.yul\":1172:1221   */\n      mstore\n        /* \"#utility.yul\":1247:1249   */\n      0x20\n        /* \"#utility.yul\":1242:1245   */\n      dup3\n        /* \"#utility.yul\":1238:1250   */\n      add\n        /* \"#utility.yul\":1231:1250   */\n      swap1\n      pop\n        /* \"#utility.yul\":1078:1256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1262:1484   */\n    tag_8:\n      0x00\n        /* \"#utility.yul\":1393:1395   */\n      0x20\n        /* \"#utility.yul\":1382:1391   */\n      dup3\n        /* \"#utility.yul\":1378:1396   */\n      add\n        /* \"#utility.yul\":1370:1396   */\n      swap1\n      pop\n        /* \"#utility.yul\":1406:1477   */\n      tag_42\n        /* \"#utility.yul\":1474:1475   */\n      0x00\n        /* \"#utility.yul\":1463:1472   */\n      dup4\n        /* \"#utility.yul\":1459:1476   */\n      add\n        /* \"#utility.yul\":1450:1456   */\n      dup5\n        /* \"#utility.yul\":1406:1477   */\n      tag_30\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1360:1484   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1490:1909   */\n    tag_21:\n      0x00\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup3\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1671:1697   */\n      swap1\n      pop\n        /* \"#utility.yul\":1743:1752   */\n      dup2\n        /* \"#utility.yul\":1737:1741   */\n      dup2\n        /* \"#utility.yul\":1733:1753   */\n      sub\n        /* \"#utility.yul\":1729:1730   */\n      0x00\n        /* \"#utility.yul\":1718:1727   */\n      dup4\n        /* \"#utility.yul\":1714:1731   */\n      add\n        /* \"#utility.yul\":1707:1754   */\n      mstore\n        /* \"#utility.yul\":1771:1902   */\n      tag_44\n        /* \"#utility.yul\":1897:1901   */\n      dup2\n        /* \"#utility.yul\":1771:1902   */\n      tag_34\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1763:1902   */\n      swap1\n      pop\n        /* \"#utility.yul\":1661:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1915:2334   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":2119:2121   */\n      0x20\n        /* \"#utility.yul\":2108:2117   */\n      dup3\n        /* \"#utility.yul\":2104:2122   */\n      add\n        /* \"#utility.yul\":2096:2122   */\n      swap1\n      pop\n        /* \"#utility.yul\":2168:2177   */\n      dup2\n        /* \"#utility.yul\":2162:2166   */\n      dup2\n        /* \"#utility.yul\":2158:2178   */\n      sub\n        /* \"#utility.yul\":2154:2155   */\n      0x00\n        /* \"#utility.yul\":2143:2152   */\n      dup4\n        /* \"#utility.yul\":2139:2156   */\n      add\n        /* \"#utility.yul\":2132:2179   */\n      mstore\n        /* \"#utility.yul\":2196:2327   */\n      tag_46\n        /* \"#utility.yul\":2322:2326   */\n      dup2\n        /* \"#utility.yul\":2196:2327   */\n      tag_38\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":2188:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2086:2334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2340:2509   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":2458:2464   */\n      dup3\n        /* \"#utility.yul\":2453:2456   */\n      dup3\n        /* \"#utility.yul\":2446:2465   */\n      mstore\n        /* \"#utility.yul\":2498:2502   */\n      0x20\n        /* \"#utility.yul\":2493:2496   */\n      dup3\n        /* \"#utility.yul\":2489:2503   */\n      add\n        /* \"#utility.yul\":2474:2503   */\n      swap1\n      pop\n        /* \"#utility.yul\":2436:2509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2515:2611   */\n    tag_33:\n      0x00\n        /* \"#utility.yul\":2581:2605   */\n      tag_49\n        /* \"#utility.yul\":2599:2604   */\n      dup3\n        /* \"#utility.yul\":2581:2605   */\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":2570:2605   */\n      swap1\n      pop\n        /* \"#utility.yul\":2560:2611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2617:2743   */\n    tag_50:\n      0x00\n        /* \"#utility.yul\":2694:2736   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2687:2692   */\n      dup3\n        /* \"#utility.yul\":2683:2737   */\n      and\n        /* \"#utility.yul\":2672:2737   */\n      swap1\n      pop\n        /* \"#utility.yul\":2662:2743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:2871   */\n    tag_26:\n        /* \"#utility.yul\":2822:2846   */\n      tag_53\n        /* \"#utility.yul\":2840:2845   */\n      dup2\n        /* \"#utility.yul\":2822:2846   */\n      tag_33\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2815:2820   */\n      dup2\n        /* \"#utility.yul\":2812:2847   */\n      eq\n        /* \"#utility.yul\":2802:2804   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":2861:2862   */\n      0x00\n        /* \"#utility.yul\":2858:2859   */\n      dup1\n        /* \"#utility.yul\":2851:2863   */\n      revert\n        /* \"#utility.yul\":2802:2804   */\n    tag_54:\n        /* \"#utility.yul\":2792:2871   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f7069ae4c8b2d9f22ee9ac217672150186a4161094759b20bbc66d44e17b60a364736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a3610437806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063893d20e81461003b578063a6f9dae114610059575b600080fd5b610043610075565b604051610050919061034c565b60405180910390f35b610073600480360381019061006e919061026e565b61009e565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012390610387565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561019c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019390610367565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081359050610268816103ea565b92915050565b60006020828403121561028057600080fd5b600061028e84828501610259565b91505092915050565b6102a0816103b8565b82525050565b60006102b36032836103a7565b91507f43616e2774207472616e73666572206f776e65727368697020746f207468652060008301527f7a65726f20616464726573732c2066616d2e00000000000000000000000000006020830152604082019050919050565b6000610319601a836103a7565b91507f4e61682c20796f75277265206e6f7420746865206f776e65722e0000000000006000830152602082019050919050565b60006020820190506103616000830184610297565b92915050565b60006020820190508181036000830152610380816102a6565b9050919050565b600060208201905081810360008301526103a08161030c565b9050919050565b600082825260208201905092915050565b60006103c3826103ca565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6103f3816103b8565b81146103fe57600080fd5b5056fea2646970667358221220f7069ae4c8b2d9f22ee9ac217672150186a4161094759b20bbc66d44e17b60a364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x342827C97908E5E2F71151C08502A66D44B6F758E3AC2F1DE95F02EB95F0A735 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x437 DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x26E JUMP JUMPDEST PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP1 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193 SWAP1 PUSH2 0x367 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x342827C97908E5E2F71151C08502A66D44B6F758E3AC2F1DE95F02EB95F0A735 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x268 DUP2 PUSH2 0x3EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28E DUP5 DUP3 DUP6 ADD PUSH2 0x259 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A0 DUP2 PUSH2 0x3B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B3 PUSH1 0x32 DUP4 PUSH2 0x3A7 JUMP JUMPDEST SWAP2 POP PUSH32 0x43616E2774207472616E73666572206F776E65727368697020746F2074686520 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7A65726F20616464726573732C2066616D2E0000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319 PUSH1 0x1A DUP4 PUSH2 0x3A7 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E61682C20796F75277265206E6F7420746865206F776E65722E000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x361 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x380 DUP2 PUSH2 0x2A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A0 DUP2 PUSH2 0x30C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3 DUP3 PUSH2 0x3CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F3 DUP2 PUSH2 0x3B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 MOD SWAP11 0xE4 0xC8 0xB2 0xD9 CALLCODE 0x2E 0xE9 0xAC 0x21 PUSH23 0x72150186A4161094759B20BBC66D44E17B60A364736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "302:2017:0:-:0;;;1163:324;;;;;;;;;;1336:10;1328:5;;:18;;;;;;;;;;;;;;;;;;1423:5;;;;;;;;;;1402:27;;1419:1;1402:27;;;;;;;;;;;;302:2017;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2874:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "273:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "276:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "290:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "305:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "309:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "334:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "369:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "389:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "344:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "344:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "334:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "485:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "502:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "525:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "507:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "495:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "480:3:1",
														"type": ""
													}
												],
												"src": "420:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "690:236:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "700:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "766:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "700:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "795:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "800:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "791:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "791:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "804:34:1",
																		"type": "",
																		"value": "Can't transfer ownership to the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "784:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "860:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "865:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "856:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "856:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "870:20:1",
																		"type": "",
																		"value": "zero address, fam."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "849:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "849:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "912:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "917:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "901:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b6ef627f2cb1b160b10f045ab6a0556e20cc834712fdcec043c7f70e30b635c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "678:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "686:3:1",
														"type": ""
													}
												],
												"src": "544:382:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1078:178:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1088:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1154:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1159:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1095:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1095:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1183:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1188:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1192:28:1",
																		"type": "",
																		"value": "Nah, you're not the owner."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1172:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1231:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1242:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1247:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1238:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a2478aa43bbb3af4aa677a78cdd91b219dbe8182a09cefdb45095d78ddb94dfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1066:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1074:3:1",
														"type": ""
													}
												],
												"src": "932:324:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1360:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1370:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1382:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1393:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1378:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1378:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1370:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1450:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1463:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1474:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1459:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1406:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1406:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1406:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1332:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1344:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1355:4:1",
														"type": ""
													}
												],
												"src": "1262:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1671:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1683:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1694:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1671:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1729:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1714:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1737:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1743:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1733:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1707:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1763:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1897:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b6ef627f2cb1b160b10f045ab6a0556e20cc834712fdcec043c7f70e30b635c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1771:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1763:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b6ef627f2cb1b160b10f045ab6a0556e20cc834712fdcec043c7f70e30b635c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1641:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1656:4:1",
														"type": ""
													}
												],
												"src": "1490:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2086:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2096:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2108:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2119:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2096:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2143:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2139:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2162:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2168:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2158:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2132:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2188:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2322:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a2478aa43bbb3af4aa677a78cdd91b219dbe8182a09cefdb45095d78ddb94dfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2196:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2196:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2188:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2478aa43bbb3af4aa677a78cdd91b219dbe8182a09cefdb45095d78ddb94dfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2066:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2081:4:1",
														"type": ""
													}
												],
												"src": "1915:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2436:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2453:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2458:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2446:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2474:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2493:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2498:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2489:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2474:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2408:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2413:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2424:11:1",
														"type": ""
													}
												],
												"src": "2340:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2560:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2570:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2599:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2581:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2581:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2570:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2542:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2552:7:1",
														"type": ""
													}
												],
												"src": "2515:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2662:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2672:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2687:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2694:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2672:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2644:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2654:7:1",
														"type": ""
													}
												],
												"src": "2617:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2849:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2858:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2861:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2851:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2851:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2851:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2815:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2840:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2822:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2822:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2812:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2805:43:1"
															},
															"nodeType": "YulIf",
															"src": "2802:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2785:5:1",
														"type": ""
													}
												],
												"src": "2749:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_1b6ef627f2cb1b160b10f045ab6a0556e20cc834712fdcec043c7f70e30b635c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n\n        mstore(add(pos, 0), \"Can't transfer ownership to the \")\n\n        mstore(add(pos, 32), \"zero address, fam.\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a2478aa43bbb3af4aa677a78cdd91b219dbe8182a09cefdb45095d78ddb94dfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n\n        mstore(add(pos, 0), \"Nah, you're not the owner.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b6ef627f2cb1b160b10f045ab6a0556e20cc834712fdcec043c7f70e30b635c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b6ef627f2cb1b160b10f045ab6a0556e20cc834712fdcec043c7f70e30b635c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2478aa43bbb3af4aa677a78cdd91b219dbe8182a09cefdb45095d78ddb94dfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2478aa43bbb3af4aa677a78cdd91b219dbe8182a09cefdb45095d78ddb94dfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063893d20e81461003b578063a6f9dae114610059575b600080fd5b610043610075565b604051610050919061034c565b60405180910390f35b610073600480360381019061006e919061026e565b61009e565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012390610387565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561019c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019390610367565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081359050610268816103ea565b92915050565b60006020828403121561028057600080fd5b600061028e84828501610259565b91505092915050565b6102a0816103b8565b82525050565b60006102b36032836103a7565b91507f43616e2774207472616e73666572206f776e65727368697020746f207468652060008301527f7a65726f20616464726573732c2066616d2e00000000000000000000000000006020830152604082019050919050565b6000610319601a836103a7565b91507f4e61682c20796f75277265206e6f7420746865206f776e65722e0000000000006000830152602082019050919050565b60006020820190506103616000830184610297565b92915050565b60006020820190508181036000830152610380816102a6565b9050919050565b600060208201905081810360008301526103a08161030c565b9050919050565b600082825260208201905092915050565b60006103c3826103ca565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6103f3816103b8565b81146103fe57600080fd5b5056fea2646970667358221220f7069ae4c8b2d9f22ee9ac217672150186a4161094759b20bbc66d44e17b60a364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x26E JUMP JUMPDEST PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP1 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193 SWAP1 PUSH2 0x367 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x342827C97908E5E2F71151C08502A66D44B6F758E3AC2F1DE95F02EB95F0A735 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x268 DUP2 PUSH2 0x3EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28E DUP5 DUP3 DUP6 ADD PUSH2 0x259 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A0 DUP2 PUSH2 0x3B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B3 PUSH1 0x32 DUP4 PUSH2 0x3A7 JUMP JUMPDEST SWAP2 POP PUSH32 0x43616E2774207472616E73666572206F776E65727368697020746F2074686520 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7A65726F20616464726573732C2066616D2E0000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319 PUSH1 0x1A DUP4 PUSH2 0x3A7 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E61682C20796F75277265206E6F7420746865206F776E65722E000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x361 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x380 DUP2 PUSH2 0x2A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A0 DUP2 PUSH2 0x30C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3 DUP3 PUSH2 0x3CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F3 DUP2 PUSH2 0x3B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 MOD SWAP11 0xE4 0xC8 0xB2 0xD9 CALLCODE 0x2E 0xE9 0xAC 0x21 PUSH23 0x72150186A4161094759B20BBC66D44E17B60A364736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "302:2017:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2186:131;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1637:413;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2186:131;2229:7;2255:5;;;;;;;;;;;2248:12;;2186:131;:::o;1637:413::-;880:5;;;;;;;;;;866:19;;:10;:19;;;858:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1869:1:::1;1849:22;;:8;:22;;;;1841:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1957:8;1941:25;;1950:5;::::0;::::1;;;;;;;;1941:25;;;;;;;;;;;;2008:8;2000:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;1637:413:::0;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:382::-;;707:67;771:2;766:3;707:67;:::i;:::-;700:74;;804:34;800:1;795:3;791:11;784:55;870:20;865:2;860:3;856:12;849:42;917:2;912:3;908:12;901:19;;690:236;;;:::o;932:324::-;;1095:67;1159:2;1154:3;1095:67;:::i;:::-;1088:74;;1192:28;1188:1;1183:3;1179:11;1172:49;1247:2;1242:3;1238:12;1231:19;;1078:178;;;:::o;1262:222::-;;1393:2;1382:9;1378:18;1370:26;;1406:71;1474:1;1463:9;1459:17;1450:6;1406:71;:::i;:::-;1360:124;;;;:::o;1490:419::-;;1694:2;1683:9;1679:18;1671:26;;1743:9;1737:4;1733:20;1729:1;1718:9;1714:17;1707:47;1771:131;1897:4;1771:131;:::i;:::-;1763:139;;1661:248;;;:::o;1915:419::-;;2119:2;2108:9;2104:18;2096:26;;2168:9;2162:4;2158:20;2154:1;2143:9;2139:17;2132:47;2196:131;2322:4;2196:131;:::i;:::-;2188:139;;2086:248;;;:::o;2340:169::-;;2458:6;2453:3;2446:19;2498:4;2493:3;2489:14;2474:29;;2436:73;;;;:::o;2515:96::-;;2581:24;2599:5;2581:24;:::i;:::-;2570:35;;2560:51;;;:::o;2617:126::-;;2694:42;2687:5;2683:54;2672:65;;2662:81;;;:::o;2749:122::-;2822:24;2840:5;2822:24;:::i;:::-;2815:5;2812:35;2802:2;;2861:1;2858;2851:12;2802:2;2792:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "215800",
								"executionCost": "23501",
								"totalCost": "239301"
							},
							"external": {
								"changeOwner(address)": "24605",
								"getOwner()": "1200"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 302,
									"end": 2319,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 302,
									"end": 2319,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 302,
									"end": 2319,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1163,
									"end": 1487,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1163,
									"end": 1487,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1163,
									"end": 1487,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1163,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1163,
									"end": 1487,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1163,
									"end": 1487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 1487,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1163,
									"end": 1487,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1163,
									"end": 1487,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1163,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1163,
									"end": 1487,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1336,
									"end": 1346,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1333,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1333,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1419,
									"end": 1420,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "PUSH",
									"source": 0,
									"value": "342827C97908E5E2F71151C08502A66D44B6F758E3AC2F1DE95F02EB95F0A735"
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1402,
									"end": 1429,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 302,
									"end": 2319,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 302,
									"end": 2319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 302,
									"end": 2319,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 302,
									"end": 2319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 2319,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 302,
									"end": 2319,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 2319,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7069ae4c8b2d9f22ee9ac217672150186a4161094759b20bbc66d44e17b60a364736f6c63430008000033",
									".code": [
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "A6F9DAE1"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 302,
											"end": 2319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2317,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 880,
											"end": 885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 880,
											"end": 885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 885,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 880,
											"end": 885,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 885,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 880,
											"end": 885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 880,
											"end": 885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 866,
											"end": 885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 866,
											"end": 885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 866,
											"end": 876,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 866,
											"end": 885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 866,
											"end": 885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 866,
											"end": 885,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 858,
											"end": 916,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 858,
											"end": 916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 858,
											"end": 916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 858,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 858,
											"end": 916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 858,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 858,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 858,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 858,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1869,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1849,
											"end": 1857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1841,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "342827C97908E5E2F71151C08502A66D44B6F758E3AC2F1DE95F02EB95F0A735"
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 2050,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 278,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 378,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 365,
											"end": 387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 334,
											"end": 397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 290,
											"end": 407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 525,
											"end": 530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 495,
											"end": 532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 544,
											"end": 926,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 544,
											"end": 926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 544,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 766,
											"end": 769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 707,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 707,
											"end": 774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 700,
											"end": 774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 700,
											"end": 774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "43616E2774207472616E73666572206F776E65727368697020746F2074686520"
										},
										{
											"begin": 800,
											"end": 801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 798,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 791,
											"end": 802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 784,
											"end": 839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 870,
											"end": 890,
											"name": "PUSH",
											"source": 1,
											"value": "7A65726F20616464726573732C2066616D2E0000000000000000000000000000"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 860,
											"end": 863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 856,
											"end": 868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 849,
											"end": 891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 917,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 908,
											"end": 920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 901,
											"end": 920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 901,
											"end": 920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 926,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1256,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 932,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 932,
											"end": 1256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1095,
											"end": 1162,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1095,
											"end": 1162,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "4E61682C20796F75277265206E6F7420746865206F776E65722E000000000000"
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1186,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1256,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1262,
											"end": 1484,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1262,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1382,
											"end": 1391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1474,
											"end": 1475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1406,
											"end": 1477,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1406,
											"end": 1477,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1406,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1484,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1484,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1490,
											"end": 1909,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1490,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1753,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1771,
											"end": 1902,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1771,
											"end": 1902,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1771,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1909,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1915,
											"end": 2334,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1915,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 2334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2178,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2322,
											"end": 2326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2196,
											"end": 2327,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2196,
											"end": 2327,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2196,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2334,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2340,
											"end": 2509,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2340,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2493,
											"end": 2496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2509,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2515,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2515,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2599,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2581,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2617,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2617,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2743,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2749,
											"end": 2871,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2749,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2840,
											"end": 2845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2847,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2802,
											"end": 2804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2863,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2804,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2802,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2871,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeOwner(address)": "a6f9dae1",
							"getOwner()": "893d20e8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is all about who's the boss. Sets and lets you change the owner.\",\"kind\":\"dev\",\"methods\":{\"changeOwner(address)\":{\"details\":\"Change the boss! Only the current owner can transfer ownership.\",\"params\":{\"newOwner\":\"The address of the new boss.\"}},\"constructor\":{\"details\":\"Constructor: Runs only once when the contract is born! Sets the person who deployed the contract as the first owner.\"},\"getOwner()\":{\"details\":\"Who's the boss right now? Ask this function.\",\"returns\":{\"_0\":\"address The address of the current owner.\"}}},\"title\":\"Owner\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/2_Owner.sol\":\"Owner\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/2_Owner.sol\":{\"keccak256\":\"0xb1bb909092b9bc4f58de467212cc90e0330465a828de689b38e431490991720b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8db8e33b38229c0a8b56c3e237ef4eb314a82f7341084d8dd90074260210d60b\",\"dweb:/ipfs/QmY5CShco4HT9JhMzXP7bDccNKF7Ed7CSuqgYxbipgFx8x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/2_Owner.sol:Owner",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/2_Owner.sol": {
				"ast": {
					"absolutePath": "contracts/2_Owner.sol",
					"exportedSymbols": {
						"Owner": [
							78
						]
					},
					"id": 79,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "191:110:0",
								"text": " @title Owner\n @dev This contract is all about who's the boss. Sets and lets you change the owner."
							},
							"fullyImplemented": true,
							"id": 78,
							"linearizedBaseContracts": [
								78
							],
							"name": "Owner",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 78,
									"src": "324:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "324:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 10,
									"name": "OwnerSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "508:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "534:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:52:0"
									},
									"src": "493:67:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "709:296:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 13,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "866:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "866:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 15,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "880:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "866:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e61682c20796f75277265206e6f7420746865206f776e65722e",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "887:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2478aa43bbb3af4aa677a78cdd91b219dbe8182a09cefdb45095d78ddb94dfe",
																"typeString": "literal_string \"Nah, you're not the owner.\""
															},
															"value": "Nah, you're not the owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2478aa43bbb3af4aa677a78cdd91b219dbe8182a09cefdb45095d78ddb94dfe",
																"typeString": "literal_string \"Nah, you're not the owner.\""
															}
														],
														"id": 12,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "858:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "858:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "858:58:0"
											},
											{
												"id": 20,
												"nodeType": "PlaceholderStatement",
												"src": "926:1:0"
											}
										]
									},
									"id": 22,
									"name": "isOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:0"
									},
									"src": "690:315:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1177:310:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 26,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 27,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1336:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1336:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1328:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "1328:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1419:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1411:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 32,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1411:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1411:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 36,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1423:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "OwnerSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1402:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1402:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "EmitStatement",
												"src": "1397:32:0"
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1011:147:0",
										"text": " @dev Constructor: Runs only once when the contract is born!\n Sets the person who deployed the contract as the first owner."
									},
									"id": 40,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1174:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 78,
									"src": "1163:324:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1691:359:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 49,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "1849:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 52,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1869:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1861:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 50,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1861:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1861:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1849:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774207472616e73666572206f776e65727368697020746f20746865207a65726f20616464726573732c2066616d2e",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1873:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b6ef627f2cb1b160b10f045ab6a0556e20cc834712fdcec043c7f70e30b635c",
																"typeString": "literal_string \"Can't transfer ownership to the zero address, fam.\""
															},
															"value": "Can't transfer ownership to the zero address, fam."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b6ef627f2cb1b160b10f045ab6a0556e20cc834712fdcec043c7f70e30b635c",
																"typeString": "literal_string \"Can't transfer ownership to the zero address, fam.\""
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1841:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1841:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "1841:85:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 59,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1950:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 60,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "1957:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 58,
														"name": "OwnerSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1941:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "EmitStatement",
												"src": "1936:30:0"
											},
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 63,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "2000:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 64,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "2008:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2000:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "2000:16:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1493:139:0",
										"text": " @dev Change the boss! Only the current owner can transfer ownership.\n @param newOwner The address of the new boss."
									},
									"functionSelector": "a6f9dae1",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 46,
											"modifierName": {
												"id": 45,
												"name": "isOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "1683:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1683:7:0"
										}
									],
									"name": "changeOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1658:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1657:18:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1691:0:0"
									},
									"scope": 78,
									"src": "1637:413:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "2238:79:0",
										"statements": [
											{
												"expression": {
													"id": 74,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "2255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 73,
												"id": 75,
												"nodeType": "Return",
												"src": "2248:12:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "2056:125:0",
										"text": " @dev Who's the boss right now? Ask this function.\n @return address The address of the current owner."
									},
									"functionSelector": "893d20e8",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2203:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2229:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2228:9:0"
									},
									"scope": 78,
									"src": "2186:131:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 79,
							"src": "302:2017:0"
						}
					],
					"src": "32:2288:0"
				},
				"id": 0
			}
		}
	}
}